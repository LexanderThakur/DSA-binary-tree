number of nodes in the longest path between any two nodes


  public static int diameter(Node root){
        if(root==null){
            return 0;
        }
        int diam1=diameter(root.left);
        int diam2=diameter((root.right));
        int diam3=height(root.left)+height(root.right)+1;
        return Math.max(diam3,Math.max(diam1,diam2));
    }
//O(n^2);






public static TreeInfo diameter2(Node root){
        if(root==null){
            return new TreeInfo(0,0);
        }
        TreeInfo left=diameter2((root.left));
        TreeInfo right=diameter2(root.left);
        int myHeight=Math.max(left.ht,right.ht)+1;
        int diam1=left.diam;
        int diam2= right.diam;
        int diam3=left.ht+ right.ht+1;
        int mydiam=Math.max(Math.max(diam1,diam2),diam3);

        TreeInfo myInfo=new TreeInfo(myHeight,mydiam);
        return myInfo;
    }
//O(n)
